import { useCallback, useEffect, useRef } from 'react';
import { AR_COMPONENT_NAME } from './constant';
import { cleanupVideo } from './common';
// use for activating AR
const useARManager = (sceneRef) => {
    const arSystem = useRef();
    const startAR = useCallback(() => {
        if (!arSystem.current)
            return;
        return arSystem.current.start();
    }, [arSystem.current]);
    const stopAR = useCallback(() => {
        if (!arSystem.current)
            return;
        arSystem.current.stop();
        cleanupVideo();
    }, [arSystem.current]);
    useEffect(() => {
        if (!sceneRef.current)
            return;
        let arSystems = AR_COMPONENT_NAME.IMAGE.IMAGE_SYSTEM;
        const systemKeys = Object.keys(sceneRef.current?.systems);
        for (const key of systemKeys) {
            switch (key) {
                case AR_COMPONENT_NAME.FACE.FACE_SYSTEM:
                    arSystems = AR_COMPONENT_NAME.FACE.FACE_SYSTEM;
                    break;
                case AR_COMPONENT_NAME.IMAGE.IMAGE_SYSTEM:
                    arSystems = AR_COMPONENT_NAME.IMAGE.IMAGE_SYSTEM;
                    break;
            }
        }
        arSystem.current = sceneRef.current.systems[arSystems];
        return () => {
            stopAR();
        };
    }, []);
    return {
        startAR,
        stopAR,
        arSystem: arSystem.current,
    };
};
export default useARManager;
