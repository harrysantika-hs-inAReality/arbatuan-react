import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Camera, Sphere, Entity } from 'aframe-react-component';
import FaceTracking from '../provider/FaceTracking';
import { Faces, Scene } from '../components';
import useARManager from '../utils/useARManager';
const ExampleFaceTracking = () => {
    const [enabled, setEnabled] = React.useState(false);
    const sceneRef = React.useRef();
    const { startAR, stopAR } = useARManager(sceneRef);
    const onClick = () => {
        if (enabled) {
            stopAR();
        }
        else {
            startAR();
        }
        setEnabled((curr) => !curr);
    };
    return (_jsxs(FaceTracking, { children: [_jsx("button", { onClick: onClick, style: { position: 'absolute', zIndex: 999 }, children: enabled ? 'Stop' : 'Start' }), _jsxs(Scene, { mindARFace: {
                    autoStart: false,
                }, colorSpace: "sRGB", embedded: true, renderer: "colorManagement: true, physicallyCorrectLights", orientationUI: false, vrModeUI: false, stats: enabled, ref: sceneRef, children: [_jsx(Camera, { position: { x: 0, y: 0, z: 0 }, "look-controls": false, active: false }), _jsx(Entity, { visible: enabled, children: _jsx(Faces, { anchorIndex: 1, children: _jsx(Sphere, { radius: 0.1, color: 'green', position: [0, 0, 0] }) }) })] })] }));
};
export default ExampleFaceTracking;
